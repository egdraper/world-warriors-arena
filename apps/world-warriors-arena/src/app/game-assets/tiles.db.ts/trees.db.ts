import { GrowablePanelPosition, SpriteTile } from "../../models/cell.model";
import { tileB_outside } from "./images";

export const trees: SpriteTile[] = [
  {
    id: "treeClumpTopLeft",
    position: GrowablePanelPosition.topLeftPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 0,
    spriteGridPosY: 10,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: false,
      topRightNeighbor: null,
      rightNeighbor: true,
      bottomRightNeighbor: null,
      bottomNeighbor: true,
      bottomLeftNeighbor: null,
      leftNeighbor: false,
      topLeftNeighbor: false,
    }
  },
  {
    id: "treeClumpTopCenter",
    position: GrowablePanelPosition.topCenterPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 1,
    spriteGridPosY: 10,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: false,
      topRightNeighbor: null,
      rightNeighbor: true,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: true,
      topLeftNeighbor: null,
    }
  }, {
    id: "treeClumpTopRight",
    position: GrowablePanelPosition.topRightPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 2,
    spriteGridPosY: 10,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: false,
      topRightNeighbor: false,
      rightNeighbor: false,
      bottomRightNeighbor: null,
      bottomNeighbor: true,
      bottomLeftNeighbor: null,
      leftNeighbor: true,
      topLeftNeighbor: null,
    }
  },
  {
    id: "treeClumpGrowableLeft",
    position: GrowablePanelPosition.growableLeftPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 0,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: null,
      rightNeighbor: true,
      bottomRightNeighbor: null,
      bottomNeighbor: true,
      bottomLeftNeighbor: null,
      leftNeighbor: false,
      topLeftNeighbor: false, // this one
    }
  }, {
    id: "treeClumpGrowableCenter",
    position: GrowablePanelPosition.growableCenterPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 1,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: true,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: true,
      topLeftNeighbor: true,
    }

  }, {
    id: "treeClumpGrowableRight",
    position: GrowablePanelPosition.growableRightPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 2,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: false, /// This one
      rightNeighbor: false,
      bottomRightNeighbor: null,
      bottomNeighbor: true,
      bottomLeftNeighbor: null,
      leftNeighbor: true,
      topLeftNeighbor: null,
    }
  }, {
    id: "treeClumpTrunkLeft",
    position: GrowablePanelPosition.bottomLeftPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 2,
    spriteGridPosY: 13,
    tileHeight: 3,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: null,
      topRightNeighbor: null,
      rightNeighbor: true,
      bottomRightNeighbor: null,
      bottomNeighbor: false,
      bottomLeftNeighbor: false,
      leftNeighbor: false,
      topLeftNeighbor: false,
    }
  },
  {
    id: "treeClumpTrunkCenter",
    position: GrowablePanelPosition.bottomCenterPanel,
    default: true,
    spriteSheet: tileB_outside,
    spriteGridPosX: 3,
    spriteGridPosY: 13,
    tileHeight: 3,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: null,
      topRightNeighbor: null,
      rightNeighbor: true,
      bottomRightNeighbor: null,
      bottomNeighbor: false,
      bottomLeftNeighbor: null,
      leftNeighbor: true,
      topLeftNeighbor: null,
    }
  },
  {
    id: "treeClumpTrunkRight",
    position: GrowablePanelPosition.bottomRightPanel,
    spriteSheet: tileB_outside,
    spriteGridPosX: 4,
    spriteGridPosY: 13,
    tileHeight: 3,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: null,
      topRightNeighbor: false,
      rightNeighbor: false,
      bottomRightNeighbor: false,
      bottomNeighbor: false,
      bottomLeftNeighbor: null,
      leftNeighbor: true,
      topLeftNeighbor: null,
    }
  },
  {
    id: "treeClumpTrunkLeftAngle",
    position: GrowablePanelPosition.bottomLeftPanelAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 1,
    spriteGridPosY: 13,
    tileHeight: 3,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: null,
      topRightNeighbor: null,
      rightNeighbor: true,
      bottomRightNeighbor: null,
      bottomNeighbor: false,
      bottomLeftNeighbor: false,
      leftNeighbor: false,
      topLeftNeighbor: true,
    }
  },
  {
    id: "treeClumpTrunkRightAngle",
    position: GrowablePanelPosition.bottomRightPanelAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 5,
    spriteGridPosY: 13,
    tileHeight: 3,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: null,
      topRightNeighbor: true,
      rightNeighbor: false,
      bottomRightNeighbor: false,
      bottomNeighbor: false,
      bottomLeftNeighbor: null,
      leftNeighbor: true,
      topLeftNeighbor: null,
    }
  },
  {
    id: "treeClumpLeftFillerAngle",
    position: GrowablePanelPosition.bottomLeftPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 6,
    spriteGridPosY: 10,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: true,
      bottomRightNeighbor: false,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: true,
      topLeftNeighbor: true,

    }
  },
  {
    id: "treeClumpRightFillerAngle",
    position: GrowablePanelPosition.bottomRightPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 7,
    spriteGridPosY: 10,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {

      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: true,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: false,
      leftNeighbor: true,
      topLeftNeighbor: true,
    }
  },
  {
    id: "treeClumpLeftFillerAngleUP",
    position: GrowablePanelPosition.bottomRightPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 6,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: false,
      rightNeighbor: true,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: true,
      topLeftNeighbor: true,

    }
  },
  {
    id: "treeClumpRightFillerAngleUp",
    position: GrowablePanelPosition.bottomRightPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 7,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {

      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: true,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: true,
      topLeftNeighbor: false,
    }
  },
  {
    id: "treeClumpRightAngleGapFiller",
    position: GrowablePanelPosition.bottomRightPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 6,
    spriteGridPosY: 14,
    tileHeight: 2, 
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: false,
      bottomRightNeighbor: false,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: true,
      topLeftNeighbor: true,
    } 
  },
  {
    id: "treeClumpLeftAngleGapFiller",
    position: GrowablePanelPosition.bottomRightPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 7,
    spriteGridPosY: 14,
    tileHeight: 2, 
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: true,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: false,
      leftNeighbor: false,
      topLeftNeighbor: true,
    } 
  },
  {
    id: "treeClumpLeftFillerAngleSingle",
    position: GrowablePanelPosition.bottomRightPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 7,
    spriteGridPosY: 14,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: true,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: false,
      topLeftNeighbor: true,
    } 
  },
  {
    id: "treeClumpRightFillerAngleSingle",
    position: GrowablePanelPosition.bottomRightPanelFillerAngle,
    spriteSheet: tileB_outside,
    spriteGridPosX: 6,
    spriteGridPosY: 14,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: 0,
    tileOffsetY: -64,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    drawWhen: {
      topNeighbor: true,
      topRightNeighbor: true,
      rightNeighbor: false,
      bottomRightNeighbor: true,
      bottomNeighbor: true,
      bottomLeftNeighbor: true,
      leftNeighbor: true,
      topLeftNeighbor: true,
    } 
  },
]

export const GrowableTrees = {
  id: "DrawableDirtCliff",
  topLeftPanel: trees.find(panel => panel.position === GrowablePanelPosition.topLeftPanel),
  topCenterPanel: trees.find(panel => panel.position === GrowablePanelPosition.topCenterPanel),
  topRightPanel: trees.find(panel => panel.position === GrowablePanelPosition.topRightPanel),
  bottomLeftPanel: trees.find(panel => panel.position === GrowablePanelPosition.bottomLeftPanel),
  bottomCenterPanel: trees.find(panel => panel.position === GrowablePanelPosition.bottomCenterPanel),
  bottomRightPanel: trees.find(panel => panel.position === GrowablePanelPosition.bottomRightPanel),
  growableLeftPanel: trees.find(panel => panel.position === GrowablePanelPosition.growableLeftPanel),
  growableCenterPanel: trees.find(panel => panel.position === GrowablePanelPosition.growableCenterPanel),
  growableRightPanel: trees.find(panel => panel.position === GrowablePanelPosition.growableRightPanel),
}

export const trees2: SpriteTile[] = [
  {
    id: "tree1",
    spriteSheet: tileB_outside,
    spriteGridPosX: 8,
    spriteGridPosY: 4,
    tileHeight: 6,
    tileWidth: 6,
    tileOffsetX: -80,
    tileOffsetY: -160,
    multiplier: 32,
    visionBlocking: true,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
  }, {
    id: "tree2",
    spriteSheet: tileB_outside,
    spriteGridPosX: 8,
    spriteGridPosY: 0,
    tileHeight: 4,
    tileWidth: 4,
    tileOffsetX: -48,
    tileOffsetY: -96,
    multiplier: 32,
    obstacle: true,
    visionBlocking: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
  }, {
    id: "treeStumpsForrest",
    spriteSheet: tileB_outside,
    spriteGridPosX: 14,
    spriteGridPosY: 4,
    tileHeight: 2,
    tileWidth: 2,
    tileOffsetX: -16,
    tileOffsetY: -28,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 1,
    obstacleObstructionY: 1,
    allowForPassThrough: true
  }, {

    id: "treeLog",
    spriteSheet: tileB_outside,
    spriteGridPosX: 5,
    spriteGridPosY: 8,
    tileHeight: 2,
    tileWidth: 3,
    tileOffsetX: -0,
    tileOffsetY: -16,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 3,
    obstacleObstructionY: 1,
  }, {
    id: "leafBottom1",
    spriteSheet: tileB_outside,
    spriteGridPosX: 1,
    spriteGridPosY: 12,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: -0,
    tileOffsetY: -0,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 0,
    obstacleObstructionY: 0,
  }, {
    id: "leafLeftCenter",
    spriteSheet: tileB_outside,
    spriteGridPosX: 0,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: -0,
    tileOffsetY: -32,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 0,
    obstacleObstructionY: 0,
  }, {
    id: "leafLeftTop",
    spriteSheet: tileB_outside,
    spriteGridPosX: 0,
    spriteGridPosY: 10,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: -0,
    tileOffsetY: -0,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 0,
    obstacleObstructionY: 0,
  }, {
    id: "leafRightCenter",
    spriteSheet: tileB_outside,
    spriteGridPosX: 2,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: -0,
    tileOffsetY: -32,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 0,
    obstacleObstructionY: 0,
  }, {
    id: "leafRightTop",
    spriteSheet: tileB_outside,
    spriteGridPosX: 2,
    spriteGridPosY: 10,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: -0,
    tileOffsetY: -0,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 0,
    obstacleObstructionY: 0,
  }, {
    id: "leafCenter1",
    spriteSheet: tileB_outside,
    spriteGridPosX: 1,
    spriteGridPosY: 11,
    tileHeight: 1,
    tileWidth: 1,
    tileOffsetX: -0,
    tileOffsetY: -0,
    multiplier: 32,
    visionBlocking: false,
    obstacle: true,
    obstacleObstructionX: 0,
    obstacleObstructionY: 0,
  }
]

